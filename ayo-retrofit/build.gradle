apply plugin: 'com.android.library'

Properties configer = new Properties()
configer.load(new FileInputStream(file("../config.properties")))

android {
    compileSdkVersion Integer.valueOf(configer['compileSdkVersion'])
    buildToolsVersion configer['buildToolsVersion']

    defaultConfig {
        minSdkVersion Integer.valueOf(configer['minSdkVersion'])
        targetSdkVersion Integer.valueOf(configer['targetSdkVersion'])
        versionCode Integer.valueOf(configer['versionCode_qq'])
        versionName configer['versionName_qq']
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java.srcDirs = ['src/main/java']
        }
    }
}

def retrofitVersion = '2.0.2'
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile configer['lib_appcompat']
    compile project(':ayo-http')

    compile 'com.squareup.okhttp3:okhttp:3.2.0'

    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    //rxjava相关库
//    compile 'io.reactivex:rxjava:1.0.14'
//    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.1.3'
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
    compile ('com.github.akarnokd:rxjava-completable:1.0.0') {
        exclude module: 'rxjava'
    }
}


